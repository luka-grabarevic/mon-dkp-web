@page "/LootList"

@using MonDKP.Web.Data
@using MonDKP.Entities
@using GridShared.Sorting
@using Microsoft.Extensions.Primitives
@inject MonDkpDatabaseService DkpService

<h1>Loot List</h1>

@if (task.IsCompleted)
{
    <GridComponent T="LootEntry" Grid="@lootGrid"></GridComponent>
}
else
{
    <p><em>Loading...</em></p>
}

@code
{
    private CGrid<LootEntry> lootGrid;
    private Task task;

    protected override async Task OnParametersSetAsync()
    {
        Action<IGridColumnCollection<LootEntry>> columns = c =>
        {
            c.Add(o => o.Player)
             .Sortable(false);

            c.Add(o => o.ItemName)
             .Titled("Item")
             .Encoded(false)
             .Sanitized(false)
             .RenderValueAs(o => $"<a class='modal_link' href=\"https://classic.wowhead.com/item={o.ItemNumber}\">{o.ItemName}</a>");

            c.Add(o => o.Cost)
             .Sortable(true)
             .Titled("DKP");

            c.Add(o => o.UtcDateTime)
             .Titled("Date")
             .Sortable(true)
             .RenderValueAs(o => o.UtcDateTime.ToLocalTime().DateTime.ToShortDateString())
             .SortInitialDirection(GridSortDirection.Descending);
        };

        var query = new QueryDictionary<StringValues>();
        var client = new GridClient<LootEntry>(q => DkpService.GetLootGridRowsAsync(columns, q), query, false, "lootGrid", columns);
        client.Filterable(true);
        client.Searchable(true);
        client.Searchable(true, true, false);
        client.SetExcelExport(true);
        lootGrid = client.Grid;

        // Set new items to grid
        task = client.UpdateGrid();
        await task;
    }
}